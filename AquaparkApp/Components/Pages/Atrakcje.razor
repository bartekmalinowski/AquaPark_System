@page "/atrakcje"
@rendermode InteractiveServer

@using AquaparkApp.Data.Models
@using AquaparkApp.Services
@inject IAtrakcjaService AtrakcjaService

<PageTitle>Wszystkie Atrakcje - Aquapark</PageTitle>

<div class="container mt-4">
    <div class="text-center mb-5">
        <h1 class="display-5 fw-bold">Wszystkie Nasze Atrakcje</h1>
        <p class="lead text-muted">Odkryj pełną gamę wodnych przygód, które dla Ciebie przygotowaliśmy!</p>
    </div>

    @if (atrakcje == null)
    {
        <div class="text-center mt-5">
            <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
                <span class="visually-hidden">Ładowanie...</span>
            </div>
            <p class="mt-2">Ładowanie listy atrakcji...</p>
        </div>
    }
    else if (!atrakcje.Any())
    {
        <div class="alert alert-info text-center">
            <p class="mb-0">Przepraszamy, obecnie nie możemy wyświetlić listy atrakcji. Prosimy spróbować później.</p>
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
            @foreach (var atrakcja in atrakcje)
            {
                <div class="col">
                    <div class="card h-100 shadow-sm border-light-subtle">
                        <!-- Użyj prawdziwego URL obrazka, jeśli go masz, lub placeholdera -->
                        <img src="https://placehold.co/600x400/0d6efd/white?text=@(Uri.EscapeDataString(atrakcja.Nazwa))" class="card-img-top" alt="@atrakcja.Nazwa">
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title text-primary">@atrakcja.Nazwa</h5>
                            <p class="card-text flex-grow-1">@(string.IsNullOrWhiteSpace(atrakcja.Opis) ? "Zapraszamy do niezapomnianej zabawy!" : atrakcja.Opis)</p>
                            <ul class="list-group list-group-flush mt-auto">
                                <li class="list-group-item">Maks. osób: @atrakcja.MaxOsób</li>
                                @if (atrakcja.WymagaDodatkowejOplaty)
                                {
                                    <li class="list-group-item text-danger fw-bold">
                                        Dodatkowa opłata: @(atrakcja.CenaDodatkowa?.ToString("C") ?? "Tak")
                                    </li>
                                }
                                else
                                {
                                    <li class="list-group-item text-success">W cenie biletu</li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    // Tutaj używamy metody do pobierania WSZYSTKICH atrakcji
    private List<Atrakcja>? atrakcje;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            atrakcje = await AtrakcjaService.PobierzWszystkieAtrakcjeAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Błąd podczas ładowania atrakcji: {ex.Message}");
            atrakcje = new List<Atrakcja>(); // Pokaż pustą listę w razie błędu
        }
    }
}